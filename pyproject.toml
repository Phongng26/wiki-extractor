[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "wiki-extractor"
dynamic = ["version"]
description = "A Python library for extracting clean text from Wikipedia articles"
readme = "README.md"
license = "MIT"
authors = [
    {name = "WikiExtractor Contributors"},
]
maintainers = [
    {name = "WikiExtractor Contributors"},
]
keywords = ["wikipedia", "text extraction", "markup processing", "nlp", "text mining"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Markup",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.6"
dependencies = [
    "beautifulsoup4>=4.9.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
]

[project.urls]
Homepage = "https://github.com/Phongng26/wiki-extractor"
Documentation = "https://github.com/Phongng26/wiki-extractor#readme"
Repository = "https://github.com/Phongng26/wiki-extractor"
"Bug Tracker" = "https://github.com/Phongng26/wiki-extractor/issues"
Changelog = "https://github.com/Phongng26/wiki-extractor/blob/main/CHANGELOG.md"

[project.scripts]
wiki-extractor = "main:main"

[tool.setuptools]
packages = ["wiki_extractor", "wiki_extractor.parsers", "wiki_extractor.templates", "wiki_extractor.utils", "wiki_extractor.config"]

[tool.setuptools.dynamic]
version = {attr = "__init__.__version__"}

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.mypy]
python_version = "3.6"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["wiki_extractor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
